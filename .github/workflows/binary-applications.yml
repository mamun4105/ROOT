name: Build ROOT Binaries

on:
    push:
    pull_request:

jobs:
    check-syntax-errors:
        name: "Check for syntax errors"
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2

            - name: Set up python 3.7
              uses: actions/setup-python@v1
              with:
                  python-version: 3.7

            - name: Set up environment
              run: python -m pip install --upgrade flake8

            - name: Lint with flake8
              run: |
                # stop the build if there are Python syntax errors or undefined names
                python -m flake8 rootcode --count --select=E9,F63,F7,F82 --show-source --statistics
                # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
                python -m flake8 rootcode --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    build-binaries:
        name: "Build binaries"
        needs: check-syntax-errors
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [windows-latest, macos-latest]
        env:
            PYTHON_VERSION: 3.7
            PYTHON_ARCH: x64
        steps:
            - uses: actions/checkout@v2
              with:
                  fetch-depth: 0  # fetch complete history

            - name: Fetch git tags
              run: git fetch origin +refs/tags/*:refs/tags/*

            - name: Setup conda environment
              uses: conda-incubator/setup-miniconda@v2
              with:
                  activate-environment: root-env
                  auto-update-conda: true
                  python-version: ${{ env.PYTHON_VERSION }}
                  channels: conda-forge

            - name: Install build dependencies
              shell: bash -l {0}
              run: |
                  conda install -c conda-forge make
                  conda install -c conda-forge --file requirements-dev.txt
                  conda install -c conda-forge --file requirements.txt
                  pip install "git+https://github.com/natcap/invest.git@release/3.9#egg=natcap.invest"

            - name: Build binaries
              shell: bash -l {0}
              run: make binaries

            - name: Upload installer artifact
              if: always()
              uses: actions/upload-artifact@v2-preview
              with:
                  path: dist/*.zip
